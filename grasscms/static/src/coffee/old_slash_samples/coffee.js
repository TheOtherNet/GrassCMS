// Generated by CoffeeScript 1.3.3
(function() {

  (function($, window) {
    var Plugin, defaults, document, pluginName;
    pluginName = 'PersistentGrass';
    document = window.document;
    defaults = {
      debug: false
    };
    Plugin = (function() {

      function Plugin(element, options) {
        this.element = element;
        this.options = $.extend({}, defaults, options);
        this.element = $(this.element);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
      }

      Plugin.prototype.init = function() {
        this.do_resizable();
        this.element.on('mouseenter', function(ev) {
          return this.style.border = '1px dotted grey';
        });
        this.element.on('mouseleave', function(ev) {
          return this.style.border = '0px';
        });
        this.element.on('dragstart', this.dragstart);
        this.element.on('drag', this.drag);
        this.element.on('dragend', this.dragend);
        return this.element.on('changed', this.changed);
      };

      Plugin.prototype.do_resizable = function() {
        this.element = this.element.wrap('<div class="resizable">').parent();
        return console.log($(this));
      };

      Plugin.prototype.dragstart = function(ev) {
        $(this).data('opacity', this.style.opacity);
        this.style.border = '1px dotted grey';
        return this.style.opacity = 0.4;
      };

      Plugin.prototype.drag = function(ev) {
        $(this).attr('draggable', 'true');
        this.style.top = ev.originalEvent.y + "px";
        this.style.left = ev.originalEvent.x + "px";
        return this.style.position = "absolute";
      };

      Plugin.prototype.dragend = function(ev) {
        this.style.opacity = $(this).data('opacity') > 0 ? $(this).data('opacity') : 1;
        $(this).trigger('changed', 'top', ev.y);
        return $(this).trigger('changed', 'left', ev.x);
      };

      Plugin.prototype.changed = function(attr, result) {
        var id;
        id = $(this).attr('id');
        return $.ajax('/object/', {
          type: 'PUT',
          dataType: 'json',
          data: JSON.stringify({
            'id': id,
            'attr': attr,
            'result': result
          })
        });
      };

      return Plugin;

    })();
    return $.fn[pluginName] = function(options) {
      return this.each(function() {
        if (!$.data(this, "plugin_" + pluginName)) {
          return $.data(this, "plugin_" + pluginName, new Plugin(this, options));
        }
      });
    };
  })(jQuery, window);

}).call(this);
